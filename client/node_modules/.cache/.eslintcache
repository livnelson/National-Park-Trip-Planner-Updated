[{"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/index.js":"1","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/UserTrips.js":"2","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/Trip.js":"3","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/App.js":"4","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/CreateUser.js":"5","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Home.js":"6","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Login.js":"7","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Navbar.js":"8","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/NattyParks.js":"9","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Park.js":"10","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/ParkDetails.js":"11","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/CreateTrip.js":"12","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/ParkActivities.js":"13","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/reportWebVitals.js":"14","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/States.js":"15","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateButton.js":"16","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParks.js":"17","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParkDetails.js":"18","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParksList.js":"19"},{"size":583,"mtime":1680048418286,"results":"20","hashOfConfig":"21"},{"size":1553,"mtime":1673032578578,"results":"22","hashOfConfig":"21"},{"size":1510,"mtime":1680046707294,"results":"23","hashOfConfig":"21"},{"size":1074,"mtime":1681678064948,"results":"24","hashOfConfig":"21"},{"size":3444,"mtime":1680046638895,"results":"25","hashOfConfig":"21"},{"size":1527,"mtime":1681670368922,"results":"26","hashOfConfig":"21"},{"size":2204,"mtime":1680046659824,"results":"27","hashOfConfig":"21"},{"size":859,"mtime":1681671107181,"results":"28","hashOfConfig":"21"},{"size":776,"mtime":1673037727652,"results":"29","hashOfConfig":"21"},{"size":831,"mtime":1673042220042,"results":"30","hashOfConfig":"21"},{"size":2240,"mtime":1673037902365,"results":"31","hashOfConfig":"21"},{"size":2471,"mtime":1673037159094,"results":"32","hashOfConfig":"21"},{"size":1235,"mtime":1673038584111,"results":"33","hashOfConfig":"21"},{"size":362,"mtime":1680048406597,"results":"34","hashOfConfig":"21"},{"size":384,"mtime":1681674468211,"results":"35","hashOfConfig":"21"},{"size":1307,"mtime":1681680791959,"results":"36","hashOfConfig":"21"},{"size":1161,"mtime":1681682729658,"results":"37","hashOfConfig":"21"},{"size":1824,"mtime":1681683217354,"results":"38","hashOfConfig":"21"},{"size":1429,"mtime":1681682446137,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1srkknf",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/index.js",[],[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/UserTrips.js",["101","102","103","104","105"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/Trip.js",["106","107"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/App.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/CreateUser.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Home.js",["108","109"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Login.js",["110"],[],"import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nfunction Login({ setIsLoggedIn }) {\n  const [user, setUser] = useState({})\n  const [errors, setErrors] = useState([])\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  })\n\n  const navigate = useNavigate()\n\n  const { username, password } = formData\n\n  function onSubmit(e) {\n    e.preventDefault()\n    const user = {\n      username,\n      password\n    }\n\n    fetch(`/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(user)\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            console.log(user)\n            setIsLoggedIn(true)\n            setUser(user)\n            navigate(`/users/${user.id}`)\n          })\n        } else {\n          res.json().then(json => setErrors(json.errors))\n        }\n      })\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({ ...formData, [name]: value })\n  }\n\n  return (\n    <div>\n      <div className=\"login-card\">\n        <img src={\"./road-trip-logo.png\"} alt=\"Road Trip\" className='logo-image' />\n        <div className=\"login-form\">\n          <form onSubmit={onSubmit}>\n            <input\n              className=\"input-field\"\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              placeholder=\"Enter Username\"\n              onChange={handleChange}\n              required\n            />\n            <br />\n            <input\n              className=\"input-field\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              placeholder=\"Enter Password\"\n              onChange={handleChange}\n              required\n            />\n            <br />\n            <button className=\"button\" type=\"submit\">Log In</button>\n          </form>\n        </div>\n        {errors ? <div className=\"errors\">{errors}</div> : null}\n        <p className=\"create-acc-link\"> Need an account? <Link to=\"/CreateUser\">Create one here!</Link></p>\n      </div>\n    </div>\n  )\n}\n\nexport default Login","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Navbar.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/NattyParks.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/Park.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/ParkDetails.js",["111"],[],"import React, { useState } from 'react'\nimport CreateTrip from './CreateTrip'\n\nfunction ParkDetails({ id, fullname, images, activities, addresses, description, directionsUrl, user, checkedActivities }) {\n  const [viewCreate, setViewCreate] = useState(false)\n  const filteredAddresses = addresses.filter(address => {\n    if (address.type === \"Physical\")\n      return true\n  })\n\n  function toggleViewCreate() {\n    setViewCreate(!viewCreate)\n  }\n  console.log(activities)\n\n  const mappedAddresses = filteredAddresses.map(address => {\n    return (\n      <div>\n        <h6>Park Address:</h6>\n        <div className=\"park-address\">\n          <p>{address.line1}</p>\n          <p>{address.city}, {address.stateCode} {address.postalCode}</p>\n        </div>\n      </div>)\n  })\n\n  const mappedImages = images.map(image => {\n    return (\n      <div className=\"image-card-style\">\n        <img src={image.url} alt={image.altText} className=\"park-card-image\" />\n        <p>{image.title}</p>\n        {/* <p>{image.caption}</p> */}\n        <p className=\"photo-cred\"> Photo Credit: {image.credit}</p>\n      </div>\n    )\n  })\n\n  let activityNames = []\n\n  const mappedActivities = activities.map(activity => {\n    activityNames.push(activity.name)\n    //saveTrip(mappedActivities)\n    return <li>{activity.name}</li>\n  })\n\n  console.log(activityNames)\n\n  // console.log(fullname)\n  // console.log(addresses)\n  // console.log(description)\n\n  console.log(mappedActivities)\n\n  return (\n    <div className=\"park-detail-card\">\n      <p className=\"park-description\">{description}</p>\n      <br />\n      <span>{mappedAddresses}</span>\n      <div>\n        <br />\n        <h6>Park Activities:</h6>\n        <ul className=\"activity-details\">{mappedActivities}</ul>\n      </div>\n      <div>\n        <h6>Park Images:</h6>\n        <span className=\"image-cards\">{mappedImages}</span>\n      </div>\n      <br />\n      {viewCreate ?\n        <CreateTrip key={id} fullname={fullname} id={id} activityNames={activityNames} mappedImages={mappedImages} user={user} activities={activities} checkedActivities={checkedActivities}\n        /> :\n        <button className=\"save-button\" onClick={toggleViewCreate}>Create a Trip</button>\n      }\n    </div>\n  )\n}\n\nexport default ParkDetails","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/CreateTrip.js",["112","113","114","115","116"],[],"import React, { useState } from 'react'\nimport ParkActivities from './ParkActivities';\n\nfunction CreateTrip({ user, fullname, id, activityNames, checkedActivities }) {\n  const [errors, setErrors] = useState([])\n  const [trip, setTrip] = useState({})\n  const [userActivities, setUserActivities] = useState({})\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [tripActivities, setTripActivities] = useState('')\n\n  console.log(id)\n\n  function handleStartDateChange(e) {\n    setStartDate(e.target.value)\n  }\n\n  function handleEndDateChange(e) {\n    setEndDate(e.target.value)\n  }\n\n  async function handleSaveTrip(e) {\n    e.preventDefault()\n\n    console.log(user)\n\n    const configTrip = {\n      fullname,\n      start_date: startDate,\n      end_date: endDate,\n      user_id: user.id,\n      activities: checkedActivities.join(', ')\n    }\n\n    console.log(configTrip)\n\n\n    fetch(`/newtrip`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(configTrip)\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(trip => {\n            console.log(trip)\n            setTrip(trip)\n          })\n        } else {\n          res.json().then(json => setErrors(json.errors))\n        }\n      })\n  }\n\n  return (\n    <div>\n      <h3>Create a Trip</h3>\n      <div className=\"user-card\">\n        <div className=\"user-form\">\n          <form onSubmit={handleSaveTrip}>\n            <h2 className=\"park-name-create\">{fullname}</h2>\n            <br />\n            <input\n              className=\"user-input-field\"\n              name=\"start_date\"\n              type=\"date\"\n              value={startDate}\n              placeholder=\"Enter Start Date\"\n              onChange={handleStartDateChange}\n              required\n            />\n            <br />\n            <input\n              className=\"user-input-field\"\n              name=\"end_date\"\n              type=\"date\"\n              value={endDate}\n              placeholder=\"Enter End Date\"\n              onChange={handleEndDateChange}\n              required\n            />\n            <br />\n            {activityNames.map(activity => <ParkActivities key={trip.id} activity={activity} checkedActivities={checkedActivities} />)}\n            <br />\n            <button className=\"button\" type=\"submit\" >Save Your Trip</button>\n          </form>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default CreateTrip","/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/ParkActivities.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/reportWebVitals.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/States.js",[],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateButton.js",["117","118","119"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParks.js",["120"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParkDetails.js",["121","122"],[],"/Users/livnelson/Development/code/flatiron-projects/national-park-trip-planner-updated/client/src/components/StateParksList.js",["123"],[],{"ruleId":"124","severity":1,"message":"125","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":8,"column":16,"nodeType":"126","messageId":"127","endLine":8,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":9,"column":11,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"130","line":30,"column":9,"nodeType":"126","messageId":"127","endLine":30,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":44,"column":45,"nodeType":"133","messageId":"134","endLine":44,"endColumn":47},{"ruleId":"124","severity":1,"message":"135","line":1,"column":23,"nodeType":"126","messageId":"127","endLine":1,"endColumn":32},{"ruleId":"124","severity":1,"message":"136","line":1,"column":34,"nodeType":"126","messageId":"127","endLine":1,"endColumn":38},{"ruleId":"124","severity":1,"message":"137","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":18},{"ruleId":"124","severity":1,"message":"138","line":20,"column":7,"nodeType":"126","messageId":"127","endLine":20,"endColumn":24},{"ruleId":"124","severity":1,"message":"139","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":6,"column":54,"nodeType":"133","messageId":"134","endLine":6,"endColumn":56},{"ruleId":"124","severity":1,"message":"140","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":16},{"ruleId":"124","severity":1,"message":"141","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":24},{"ruleId":"124","severity":1,"message":"142","line":7,"column":26,"nodeType":"126","messageId":"127","endLine":7,"endColumn":43},{"ruleId":"124","severity":1,"message":"143","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":24},{"ruleId":"124","severity":1,"message":"144","line":10,"column":26,"nodeType":"126","messageId":"127","endLine":10,"endColumn":43},{"ruleId":"124","severity":1,"message":"145","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"146","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":24},{"ruleId":"124","severity":1,"message":"147","line":11,"column":9,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"124","severity":1,"message":"146","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":6,"column":54,"nodeType":"133","messageId":"134","endLine":6,"endColumn":56},{"ruleId":"124","severity":1,"message":"148","line":16,"column":9,"nodeType":"126","messageId":"127","endLine":16,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":8,"column":54,"nodeType":"133","messageId":"134","endLine":8,"endColumn":56},"no-unused-vars","'trip' is assigned a value but never used.","Identifier","unusedVar","'setTrip' is assigned a value but never used.","'user_id' is assigned a value but never used.","'addTrip' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useParams' is defined but never used.","'Link' is defined but never used.","'NattyParks' is defined but never used.","'checkedActivities' is assigned a value but never used.","'user' is assigned a value but never used.","'errors' is assigned a value but never used.","'userActivities' is assigned a value but never used.","'setUserActivities' is assigned a value but never used.","'tripActivities' is assigned a value but never used.","'setTripActivities' is assigned a value but never used.","'useEffect' is defined but never used.","'StateParkDetails' is defined but never used.","'navigate' is assigned a value but never used.","'mappedAddresses' is assigned a value but never used."]